#!/bin/bash

OSNAME=$(grep '^ID=' /etc/os-release | cut -d'=' -f2)
USERNAME=$(echo $HOME | cut -d"/" -f3)

[[ $(echo $USERNAME | grep -c jovyan) != 0 ]]   && ISJOVYAN=true || ISJOVYAN=false
[[ $(groups | grep -c sudo) != 0 ]]             && ISSUDOER=true || ISSUDOER=false
[[ "$GRANT_SUDO" = yes && "$ISJOVYAN" = true ]] && ISSUDOER=true || ISSUDOER=false
[[ $WSL_DISTRO_NAME ]]                          && ISWSL=true    || ISWSL=false
[[ $(command -v gnome-terminal) ]]              && ISGUI=true    || ISGUI=false

echo "####"
echo "OSNAME  : $OSNAME"
echo "USERNAME: $USERNAME"
echo "ISJOVYAN: $ISJOVYAN"
echo "ISSUDOER: $ISSUDOER"
echo "ISWSL   : $ISWSL"
echo "ISGUI   : $ISGUI"
echo "####"

if [ "$ISSUDOER" = true ]
then

    sudo apt-get update

    echo "#### Install general stuff"
    sudo apt-get install -y --no-install-recommends \
        zsh \
        git \
        neovim \
        wget curl \
        less
        # pdftk \

    echo "#### ruby"
    sudo apt-get install -y --no-install-recommends \
        ruby ruby-dev

    echo "#### Native OS stuff"
    if [ "$ISJOVYAN" = false ]
    then

        echo "#### docker"
        sudo apt-get -y install docker.io docker-compose && \
            sudo usermod -aG docker $USER

        echo "#### anaconda"
        which pip || test -d $HOME/.anaconda3 || \
            wget https://repo.anaconda.com/archive/Anaconda3-2020.02-Linux-x86_64.sh -O $HOME/anaconda.sh && \
            bash $HOME/anaconda.sh -b -p "$HOME/.anaconda3" && \
            rm $HOME/anaconda.sh && \
            conda init
    fi

fi


if [ $(command -v zsh) ]
then

    echo "#### zsh configuration"
    RUNZSH=no CHSH=no sh -c "$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)" && \
        test -f ~/.zshrc.pre-oh-my-zsh && \
        mv ~/.zshrc.pre-oh-my-zsh ~/.zshrc

    if [ "$ISJOVYAN" = false ]
    then
        chsh -s $(which zsh)
    fi

fi

echo "#### Jupyter notebook extensions"
if [ "$ISJOVYAN" = true ]
then

    mkdir -p $(jupyter --data-dir)/nbextensions && \
        cd $(jupyter --data-dir)/nbextensions && \
        git clone https://github.com/lambdalisue/jupyter-vim-binding vim_binding && \
        jupyter nbextension enable vim_binding/vim_binding

    ## Jupyter Classic Notebook Extensions
    jupyter nbextensions_configurator enable --sys-prefix && \
        jupyter nbextension enable vim_binding/vim_binding --sys-prefix

    export RISE_DIR=${HOME}/.local/share/jupyter/nbextensions/rise/reveal.js/css/theme
    pip install --pre rise && \
        jupyter nbextension install rise --py --user && \
        jupyter nbextension enable rise --py --user && \
        sed -i 's/^\.reveal a/body.notebook_app.rise-enabled .reveal a/g' ${RISE_DIR}/*.css

    pip install hide_code && \
        jupyter nbextension install --py hide_code --sys-prefix && \
        jupyter nbextension enable --py hide_code --sys-prefix && \
        jupyter serverextension enable --py hide_code --sys-prefix

    ## Jupyter Lab Extensions
    ## installed in docker images
    jupyter labextension enable jupyterlab_vim

fi

exit

if [ "$ISSUDOER" = true ] && [ "$ISWSL" = true ] && [ "$ISGUI" = false ]
then

    echo "#### Install GUI"
    while true; do
        read -p "In WSL environment but there is no gnome-terminal. Install it? " yn
        case $yn in
            [Yy]* ) 
                sudo apt-get install -y gnome-terminal dbus-x11
                break
                ;;
            [Nn]* )
                echo "No gnome-terminal (probably no GUI)"
                break
                ;;
            * ) 
                echo "Please answer yes or no. "
                ;;
        esac
    done
    
    [[ $(command -v gnome-terminal) ]] && ISGUI=true || ISGUI=false

fi

if [ "$ISGUI" = true ] && [ "$ISSUDOER" = true ]
then

    sudo apt-get install -y 
        powerline \
        fonts-powerline \
        fonts-noto

fi

echo "#### Mostly OS GUI stuff (not for WSL)"
if [ "$ISWSL" = false ] && [ "$ISJOVYAN" = false ]
then

    if [ "$ISSUDOER" = true ]
    then

        echo "##### install all the GUI stuff"

        sudo apt-get install -y 
            zathura \
            peek

        echo "## chrome"
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb && \
            sudo dpkg -i google-chrome-stable_current_amd64.deb && \
            sudo apt-get -y -f install && \
            rm google-chrome-stable_current_amd64.deb

        echo "#### laptop power settings"
        sudo apt-get -y install tlp tlp-rdw

        echo "#### slack"
        wget https://downloads.slack-edge.com/linux_releases/slack-desktop-4.1.2-amd64.deb && \
            sudo dpkg -i slack-desktop-4.1.2-amd64.deb && \
            sudo apt-get -y -f install && \
            rm slack-desktop-4.1.2-amd64.deb

        echo "#### PIA VPN"
        wget https://installers.privateinternetaccess.com/download/pia-linux-1.6-03756.run && \
            sh pia-linux-1.6-03756.run && \
            sudo apt-get -y install network-manager-openvpn* && \
            rm pia-linux-1.6-03756.run 

        echo "#### JabRef"
        wget https://builds.jabref.org/master/JabRef-portable_linux.tar.gz && \
            sudo tar xvzf JabRef-portable_linux.tar.gz -C /usr/local/share && \
            sudo ln -s /usr/local/share/JabRef/bin/JabRef  /usr/local/bin/JabRef && \
            rm JabRef-portable_linux.tar.gz && \
            sudo ln -sf "$HOME/.local/share/applications/JabRef.desktop" /usr/share/applications/.

        echo "#### vivaldi"
        wget -qO- https://repo.vivaldi.com/archive/linux_signing_key.pub | sudo apt-key add - && \
            sudo add-apt-repository 'deb https://repo.vivaldi.com/archive/deb/ stable main' && \
            sudo apt update && sudo apt install vivaldi-stable

        echo "#### zoom"
        wget https://zoom.us/client/latest/zoom_amd64.deb && \
            sudo dpkg -i zoom_amd64.deb && \
            sudo apt-get -y -f install && \
            rm zoom_amd64.deb


        echo "#### remove stuff"
        sudo apt-get purge --auto-remove evolution thunderbird libreoffice-core

    fi

    dconf write /org/gnome/desktop/input-sources/xkb-options "['caps:ctrl_modifier']"
    xdg-mime default org.pwmt.zathura.desktop application/pdf
    dconf write /org/gnome/shell/favorite-apps \
        "['org.gnome.Nautilus.desktop', 'JabRef.desktop', 'piavpn.desktop', 'vivaldi-stable.desktop', 'google-chrome.desktop', 'firefox-esr.desktop', 'slack.desktop', 'org.gnome.Terminal.desktop']"

fi

